When would you want to use a remote repository rather than keeping all your work
local?

    I would rather use a remote repository if I have to write code together with
    other colleagues so that we can add our changes all together.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    1) because automatic changes will be incomplete
    2) because I might want to store only my own code changes locally

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a clone from a GITHUB repo to your GITHUB account. Any changes made in the original,
    will be reflected back to your repo but not necessarily vice versa. A clone is a copy of a repo
    from GITHUB to your own local machine, disconnected from the original. A branch is a sequence of
    commits (changes) ordered by time.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    In case one wants to collaborate with others on a common project it is necessary to be informed
    on the last status of the project so that you can locally integrate the work of others.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would store each production version of a project in some place in the cloud with access for each
    colleague. That way it would be harder to track all the different changes made by colaborators and it
    might easily get messy.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
